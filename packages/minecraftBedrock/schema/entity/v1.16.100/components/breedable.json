{
	"$schema": "http://json-schema.org/draft-07/schema",
	"additionalProperties": false,
	"description": "Defines the way an entity can get into the 'love' state.",
	"type": "object",
	"properties": {
		"allow_sitting": {
			"description": "If true, entities can breed while sitting.",
			"type": "boolean"
		},
		"blend_attributes": {
			"description": "If true, the entities will blend their attributes in the offspring after they breed. For example, horses blend their health, movement, and jump_strength in their offspring.",
			"type": "boolean"
		},
		"breed_cooldown": {
			"description": "Time in seconds before the Entity can breed again.",
			"type": "number"
		},
		"love_filters": {
			"description": "The filters to run when attempting to fall in love.",
			"$ref": "../../general/filter.json"
		},
		"breed_items": {
			"description": "The list of items that can be used to get the entity into the 'love' state.",
			"anyOf": [
				{
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "string",
								"$ref": "../../../general/reference/identifiers.json#/definitions/item_identifiers"
							},
							{
								"type": "object",
								"additionalProperties": false,
								"properties": {
									"any_tag": {
										"type": "array",
										"items": {
											"type": "string",
											"$ref": "../../../item/dynamic/tagEnum.json"
										}
									}
								}
							}
						]
					}
				},
				{
					"$ref": "../../../general/reference/identifiers.json#/definitions/item_identifiers"
				}
			]
		},
		"breeds_with": {
			"description": "The list of entity definitions that this entity can breed with.",
			"anyOf": [
				{
					"type": "object",
					"properties": {
						"mate_type": {
							"description": "The entity definition of this entity's mate.",
							"$ref": "../../../general/reference/identifiers.json#/definitions/entity_identifiers"
						},
						"baby_type": {
							"description": "The entity definition of this entity's babies.",
							"$ref": "../../../general/reference/identifiers.json#/definitions/entity_identifiers"
						},
						"breed_event": {
							"description": "Event to run when this entity breeds.",
							"$ref": "../../general/eventDefinition.json"
						}
					}
				},
				{
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"mate_type": {
								"description": "The entity definition of this entity's mate.",
								"$ref": "../../../general/reference/identifiers.json#/definitions/entity_identifiers"
							},
							"baby_type": {
								"description": "The entity definition of this entity's babies.",
								"$ref": "../../../general/reference/identifiers.json#/definitions/entity_identifiers"
							},
							"breed_event": {
								"description": "Event to run when this entity breeds.",
								"$ref": "../../general/eventDefinition.json"
							}
						}
					}
				}
			]
		},
		"causes_pregnancy": {
			"description": "If true, the entity will become pregnant instead of spawning a baby.",
			"type": "boolean"
		},
		"environment_requirements": {
			"description": "The list of nearby block requirements to get the entity into the 'love' state.",
			"anyOf": [
				{
					"type": "array",
					"items": {
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"blocks": {
								"description": "The block types required nearby for the entity to breed.",
								"$ref": "../../../general/reference/identifiers.json#/definitions/block_identifiers"
							},
							"count": {
								"description": "The number of the required block types nearby for the entity to breed.",
								"type": "number"
							},
							"radius": {
								"description": "How many blocks radius from the mob's center to search in for the required blocks. Bounded between 0 and 16.",
								"type": "number"
							}
						}
					}
				},
				{
					"type": "object",
					"properties": {
						"blocks": {
							"description": "The block types required nearby for the entity to breed.",
							"$ref": "../../../general/reference/identifiers.json#/definitions/block_identifiers"
						},
						"count": {
							"description": "The number of the required block types nearby for the entity to breed.",
							"type": "number"
						},
						"radius": {
							"description": "How many blocks radius from the mob's center to search in for the required blocks. Bounded between 0 and 16.",
							"type": "number"
						}
					}
				}
			]
		},
		"extra_baby_chance": {
			"description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%.",
			"type": "number"
		},
		"inherit_tamed": {
			"description": "If true, the babies will be automatically tamed if its parents are.",
			"type": "boolean"
		},
		"max_number_of_children": {
			"description": "The maximum number of children the mob will breed.",
			"type": "integer"
		},
		"min_number_of_children": {
			"description": "The minimum number of children the mob will breed.",
			"type": "integer"
		},
		"mutation_factor": {
			"description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
			"type": "object",
			"properties": {
				"color": {
					"description": "The percentage chance of a mutation on the entity's color.",
					"type": "number"
				},
				"extra_variant": {
					"description": "The percentage chance of a mutation on the entity's extra variant type.",
					"type": "number"
				},
				"variant": {
					"description": "The percentage chance of a mutation on the entity's variant type.",
					"type": "number"
				}
			}
		},
		"deny_parents_variant": {
			"description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
			"type": "object",
			"properties": {
				"chance": {
					"description": "The percentage chance of denying the parents' variant.",
					"type": "number"
				},
				"min_variant": {
					"description": "The inclusive minimum of the variant range.",
					"type": "number"
				},
				"max_variant": {
					"description": "The inclusive maximum of the variant range.",
					"type": "number"
				}
			}
		},
		"require_tame": {
			"description": "If true, the entities need to be tamed first before they can breed.",
			"type": "boolean"
		},
		"require_full_health": {
			"description": "If true, the entity needs to be at full health before it can breed.",
			"type": "boolean"
		}
	}
}